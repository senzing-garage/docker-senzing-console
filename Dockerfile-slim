ARG BASE_IMAGE=debian:11.2-slim@sha256:4c25ffa6ef572cf0d57da8c634769a08ae94529f7de5be5587ec8ce7b9b50f9c
FROM ${BASE_IMAGE}

# Set Shell to use for RUN commands in builder step.

ENV REFRESHED_AT=2022-02-14

LABEL Name="senzing/senzing-console-slim" \
      Maintainer="support@senzing.com" \
      Version="1.0.0"

# Define health check

HEALTHCHECK CMD ["/app/healthcheck.sh"]

# Build arguments.

USER root

# Install packages via apt for building fio.

RUN apt-get update \
 && apt-get -y install \
      elvis-tiny \
      less \
      libaio1 \
      libpq-dev \
      librdkafka-dev \
      libxml2 \
      postgresql-client \
      python3 \
      python3-dev \
      python3-pip \
      unixodbc-dev \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# Install packages via PIP.

COPY requirements.txt .
RUN pip3 install --upgrade pip \
 && pip3 install -r requirements.txt \
 && rm /requirements.txt

HEALTHCHECK CMD ["/app/healthcheck.sh"]

# Configure our shell.

RUN echo "export LD_LIBRARY_PATH=/opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib" >> /etc/bash.bashrc \
 && echo "export ODBCSYSINI=/etc/opt/senzing" >> /etc/bash.bashrc \
 && echo "export PATH=${PATH}:/opt/senzing/g2/python:/opt/IBM/db2/clidriver/adm:/opt/IBM/db2/clidriver/bin" >> /etc/bash.bashrc \
 && echo "export PYTHONPATH=/opt/senzing/g2/python" >> /etc/bash.bashrc \
 && echo "export SENZING_ETC_PATH=/etc/opt/senzing" >> /etc/bash.bashrc \
 && echo "export TERM=xterm" >> /etc/bash.bashrc \
 && echo "export LC_ALL=C" >> /etc/bash.bashrc \
 && echo "export LANGUAGE=C" >> /etc/bash.bashrc

# Copy files from repository.

COPY ./rootfs /

# Make non-root container.
RUN useradd --create-home --uid 1001 senzing
USER senzing


# Make sure all messages always reach console.

ENV PYTHONUNBUFFERED=1

# Runtime execution.

WORKDIR /home/senzing
CMD ["/app/sleep-infinity.sh"]
